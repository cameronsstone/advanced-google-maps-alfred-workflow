<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.stuartryan.alfred.advancedgooglemaps</string>
	<key>category</key>
	<string>Internet</string>
	<key>connections</key>
	<dict>
		<key>02392767-C5C7-467A-81A9-1CB133687921</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0A6485DA-3570-4B8B-8E6F-2D6776189C29</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>069195C9-1EA6-4BE3-926E-3ACA803409D2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CFCBBED2-96D7-44AC-B4CC-D2CC17827019</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>0A6485DA-3570-4B8B-8E6F-2D6776189C29</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8609F863-5C65-412E-9DF8-52F1CEE7C795</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>6E16E494-D94B-4DBC-9260-D03A9463EB04</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>0F90B6AD-0FB4-4A02-8400-05BA50D9DFD4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A5D10E21-AAA9-49B9-831C-9EDCC0298C42</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>1593719B-1346-4496-BEA7-62EFFADF15EC</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>789527E4-A091-4D9C-9C7D-4B96476AE1F9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>1A9138FA-B4B6-4135-8F8E-FC6CA6A49EBE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>DE192528-8869-45A0-B879-19B5B12D7130</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>1FC6BE6D-DBE2-4932-AEEC-2DAEB558D70C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2518FC5A-667C-4BF8-B1CB-843980F50049</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4D2703F7-6EBF-4D56-8CEF-72BBF4FFF644</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4C7C5628-AB4A-4782-9D41-1C1DFE25E26B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A977BB5F-E2BA-4A94-A29A-3A6674F29E71</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4D2703F7-6EBF-4D56-8CEF-72BBF4FFF644</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>00ADDBC0-F73E-4845-92EF-2A584B30A083</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6E16E494-D94B-4DBC-9260-D03A9463EB04</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>789527E4-A091-4D9C-9C7D-4B96476AE1F9</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8609F863-5C65-412E-9DF8-52F1CEE7C795</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F0CDA005-A604-4041-830B-E4FA8965DE2E</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>86339348-F179-4B3E-9DEE-4BEBD0A30FDF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0F90B6AD-0FB4-4A02-8400-05BA50D9DFD4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8C362BD8-148F-49F3-9CF3-51DDC0715D47</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8609F863-5C65-412E-9DF8-52F1CEE7C795</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>6E16E494-D94B-4DBC-9260-D03A9463EB04</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8CED750B-175F-4EAC-9B4E-055566EBFABC</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8C362BD8-148F-49F3-9CF3-51DDC0715D47</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9AE56FAB-E1EB-4493-AEF1-000A0FC3F943</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>8609F863-5C65-412E-9DF8-52F1CEE7C795</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>6E16E494-D94B-4DBC-9260-D03A9463EB04</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9FC53C2F-2AA3-476A-BECA-12696AF87132</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>9AE56FAB-E1EB-4493-AEF1-000A0FC3F943</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A977BB5F-E2BA-4A94-A29A-3A6674F29E71</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B542CDAA-D602-4269-92EE-2AED85D35F63</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>CC3AF13B-A020-4C97-9A77-288AA288DF4C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C5816FF4-3CBC-495B-9D35-1E60F857E6C8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>EC0EBD89-9CF5-4CF5-9659-C3BA307E4B9A</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>CC3AF13B-A020-4C97-9A77-288AA288DF4C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>DC546CAB-FD45-4E44-8CB2-F5B5103C3DF9</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1FC6BE6D-DBE2-4932-AEEC-2DAEB558D70C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>DE192528-8869-45A0-B879-19B5B12D7130</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>EC0EBD89-9CF5-4CF5-9659-C3BA307E4B9A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Stuart Ryan</string>
	<key>description</key>
	<string>Search Google Maps</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Advanced Google Maps Search</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dir</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Google Maps Directions</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>8CED750B-175F-4EAC-9B4E-055566EBFABC</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $url           = '';
my $transportMode = '';
my $rawQuery      = '{query}';
my $strippedQuery;
my $modified = '';
my $origin;
my $destination;
my $middleStops;
my $transportQuery;
my $errorCode = '';
my $workAddress;
my $homeAddress;

#search for type of transport modifier
if ( $rawQuery =~ m/^((walk|drive|pt|bike) )?(.*)$/ ) {
	$strippedQuery  = $3;
	$transportQuery = $2;
}

#initialise the array after removing transport modifier
my @array       = split( /\sto\s/, $strippedQuery );
my $arraySize   = scalar(@array);
my $lastElement = $arraySize - 1;

#check for type of transport requested
if ( $transportQuery = ~m/^walk.*$/ ) {
	$transportMode = '&amp;travelmode=walking';
}
elsif ( $transportQuery = ~m/^pt.*$/ ) {
	$transportMode = '&amp;travelmode=transit';
}
elsif ( $transportQuery = ~m/^bike.*$/ ) {
	$transportMode = '&amp;travelmode=bicycling';
}
elsif ( $transportQuery = ~m/^drive.*$/ ) {
	$transportMode = '&amp;travelmode=driving';
}

$arraySize   = scalar(@array);    #reinitialise as array may have shrunk
$lastElement = $arraySize - 1;    #reinitialise as array may have shrunk

#check for only origin and destination
if ( $arraySize == 2 ) {
	$origin      = uri_escape( $array[0] );
	$destination = uri_escape( $array[1] );
}
else {
	#if we are here, we have some waypoints WOOO
	$origin      = uri_escape( $array[0] );
	$destination = uri_escape( $array[$lastElement] );

	#remove the origin and destination
	shift(@array);
	pop(@array);

	$arraySize   = scalar(@array);    #reinitialise as array may have shrunk
	$lastElement = $arraySize - 1;    #reinitialise as array may have shrunk

	# Google only supports 9 waypoints on Desktop
	if ( $arraySize &gt; 9 ) {
		$errorCode = 'TOOMANYWAYPOINTS';
	}

	$middleStops = '&amp;waypoints=';
	my $location;
	foreach (@array) {
		if ( lc($_) eq "here" ) {

			#check if we are using the here modifier for current coordinates
			$location =
			  `$ENV{'CoreLocationCLIBinary'} -format "%latitude,%longitude"`;
			if ( $? != 0 ) {
				$errorCode = 'CORELOCATIONFAILED';
			}
			else {
				chomp($location);
				$middleStops = $middleStops . uri_escape($location) . '|';
			}
		}
		elsif ( lc($_) eq "work" ) {
			$workAddress =
			  `security find-generic-password -w -s "alfred-work-address"`;
			chomp($workAddress);
			$middleStops = $middleStops . uri_escape($workAddress) . '|';
		}
		elsif ( lc($_) eq "home" ) {
			$homeAddress =
			  `security find-generic-password -w -s "alfred-home-address"`;
			chomp($homeAddress);
			$middleStops = $middleStops . uri_escape($homeAddress) . '|';
		}
		else {
			#use the provided value
			$middleStops = $middleStops . uri_escape($_) . '|';
		}
	}
	chop($middleStops);    #remove trailing pipe
}

if ( lc($origin) eq "here" ) {

	#check for 'here' location modifier and get GPS coordinates if possible
	my $location =
	  `$ENV{'CoreLocationCLIBinary'} -format "%latitude,%longitude"`;
	if ( $? != 0 ) {
		$errorCode = 'CORELOCATIONFAILED';
	}
	else {
		chomp($location);
		$origin = $location;
	}
}
elsif ( lc($origin) eq "work" ) {
	$workAddress = `security find-generic-password -w -s "alfred-work-address"`;
	chomp($workAddress);
	$origin = uri_escape($workAddress);
}
elsif ( lc($origin) eq "home" ) {
	$homeAddress = `security find-generic-password -w -s "alfred-home-address"`;
	chomp($homeAddress);
	$origin = uri_escape($homeAddress);
}

if ( lc($destination) eq "here" ) {

	#check for 'here' location modifier and get GPS coordinates if possible
	my $location =
	  `$ENV{'CoreLocationCLIBinary'} -format "%latitude,%longitude"`;
	if ( $? != 0 ) {
		$errorCode = 'CORELOCATIONFAILED';
	}
	else {
		chomp($location);
		$destination = $location;
	}
}
elsif ( lc($destination) eq "work" ) {
	$workAddress = `security find-generic-password -w -s "alfred-work-address"`;
	chomp($workAddress);
	$destination = uri_escape($workAddress);
}
elsif ( lc($destination) eq "home" ) {
	$homeAddress = `security find-generic-password -w -s "alfred-home-address"`;
	chomp($homeAddress);
	$destination = uri_escape($homeAddress);
}

if ( $errorCode eq 'TOOMANYWAYPOINTS' ) {
	print "ERROR: Too Many Waypoints";
}
elsif ( $errorCode eq 'CORELOCATIONFAILED' ) {
	print
"ERROR: CoreLocation could not get current location. Check if WiFi is on!";
}
else {
	print
"https://www.google.com.au/maps/dir/?api=1&amp;origin=$origin&amp;destination=$destination$transportMode$middleStops";
}</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>8C362BD8-148F-49F3-9CF3-51DDC0715D47</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dirfc</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Google Maps Directions from Current Location</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>02392767-C5C7-467A-81A9-1CB133687921</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $url           = '';
my $transportMode = '';
my $rawQuery      = '{query}';
my $strippedQuery;
my $modified = '';
my $origin;
my $destination;
my $middleStops;
my $transportQuery;
my $errorCode = '';

#search for type of transport modifier
if ( $rawQuery =~ m/^((walk|drive|pt|bike) )?(.*)$/ ) {
	$strippedQuery  = $3;
	$transportQuery = $2;
}

#initialise the array after removing transport modifier
my @array       = split( /\sto\s/, $strippedQuery );
my $arraySize   = scalar(@array);
my $lastElement = $arraySize - 1;

#check for type of transport requested
if ( $transportQuery =~ m/^walk.*$/ ) {
	$transportMode = '&amp;travelmode=walking';
}
elsif ( $transportQuery =~ m/^pt.*$/ ) {
	$transportMode = '&amp;travelmode=transit';
}
elsif ( $transportQuery =~ m/^bike.*$/ ) {
	$transportMode = '&amp;travelmode=bicycling';
}
elsif ( $transportQuery =~ m/^drive.*$/ ) {
	$transportMode = '&amp;travelmode=driving';
}

$arraySize   = scalar(@array);    #reinitialise as array may have shrunk
$lastElement = $arraySize - 1;    #reinitialise as array may have shrunk

#check for only destination
if ( $arraySize == 1 ) {
	$destination = uri_escape( $array[0] );
}
else {
	#if we are here, we have some waypoints WOOO
	$destination = uri_escape( $array[$lastElement] );

	#remove the destination
	pop(@array);

	$arraySize   = scalar(@array);    #reinitialise as array may have shrunk
	$lastElement = $arraySize - 1;    #reinitialise as array may have shrunk

	#Google only supports 9 waypoints on Desktop
	if ( $arraySize &gt; 9 ) {
		$errorCode = 'TOOMANYWAYPOINTS';
	}

	$middleStops = '&amp;waypoints=';
	foreach (@array) {
		$middleStops = $middleStops . uri_escape($_) . '|';
	}
	chop($middleStops);               #remove trailing pipe
}

if ( $errorCode eq 'TOOMANYWAYPOINTS' ) {
	print
"ERROR: Too Many Waypoints. Google only supports nine intermediate waypoints.";
}
else {
	my $location =
	  `$ENV{'CoreLocationCLIBinary'} -format "%latitude,%longitude"`;
	if ( $? != 0 ) {
		$errorCode = 'CORELOCATIONFAILED';
		print
"ERROR: CoreLocation could not get current location. Check if WiFi is on!";
	}
	else {
		chomp($location);
		print
"https://www.google.com.au/maps/dir/?api=1&amp;origin=$location&amp;destination=$destination$transportMode$middleStops";
	}
}</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0A6485DA-3570-4B8B-8E6F-2D6776189C29</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>{query}</string>
				<key>title</key>
				<string>Something went wrong *sadface*</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>F0CDA005-A604-4041-830B-E4FA8965DE2E</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>inputstring</key>
				<string>{query}</string>
				<key>matchcasesensitive</key>
				<false/>
				<key>matchmode</key>
				<integer>2</integer>
				<key>matchstring</key>
				<string>^ERROR.*$</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.filter</string>
			<key>uid</key>
			<string>8609F863-5C65-412E-9DF8-52F1CEE7C795</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dirtc</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Google Maps Directions to Current Location</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>9FC53C2F-2AA3-476A-BECA-12696AF87132</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $url           = '';
my $transportMode = '';
my $rawQuery      = '{query}';
my $strippedQuery;
my $modified = '';
my $origin;
my $destination;
my $middleStops;
my $transportQuery;
my $errorCode = '';

#search for type of transport modifier
if ( $rawQuery =~ m/^((walk|drive|pt|bike) )?(.*)$/ ) {
	$strippedQuery  = $3;
	$transportQuery = $2;
}

#initialise the array after removing transport modifier
my @array       = split( /\sto\s/, $strippedQuery );
my $arraySize   = scalar(@array);
my $lastElement = $arraySize - 1;

#check for type of transport requested
if ( $transportQuery =~ m/^walk.*$/ ) {
	$transportMode = '&amp;travelmode=walking';
}
elsif ( $transportQuery =~ m/^pt.*$/ ) {
	$transportMode = '&amp;travelmode=transit';
}
elsif ( $transportQuery =~ m/^bike.*$/ ) {
	$transportMode = '&amp;travelmode=bicycling';
}
elsif ( $transportQuery =~ m/^drive.*$/ ) {
	$transportMode = '&amp;travelmode=driving';
}

$arraySize   = scalar(@array);    #reinitialise as array may have shrunk
$lastElement = $arraySize - 1;    #reinitialise as array may have shrunk

#check for only origin
if ( $arraySize == 1 ) {
	$origin = uri_escape( $array[0] );
}
else {
	#if we are here, we have some waypoints WOOO
	$origin = uri_escape( $array[0] );

	#remove the origin
	shift(@array);

	$arraySize   = scalar(@array);    #reinitialise as array may have shrunk
	$lastElement = $arraySize - 1;    #reinitialise as array may have shrunk

	#Google only supports 9 waypoints on Desktop
	if ( $arraySize &gt; 9 ) {
		$errorCode = 'TOOMANYWAYPOINTS';
	}

	$middleStops = '&amp;waypoints=';
	foreach (@array) {
		$middleStops = $middleStops . uri_escape($_) . '|';
	}
	chop($middleStops);               #remove trailing pipe
}

if ( $errorCode eq 'TOOMANYWAYPOINTS' ) {
	print "ERROR: Too Many Waypoints";
}
else {
	my $location =
	  `$ENV{'CoreLocationCLIBinary'} -format "%latitude,%longitude"`;
	if ( $? != 0 ) {
		$errorCode = 'CORELOCATIONFAILED';
		print
"ERROR: CoreLocation could not get current location. Check if WiFi is on!";
	}
	else {
		chomp($location);
		print
"https://www.google.com.au/maps/dir/?api=1&amp;origin=$origin&amp;destination=$location$transportMode$middleStops";
	}
}</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>9AE56FAB-E1EB-4493-AEF1-000A0FC3F943</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>https://maps.google.{var:googleLocal}/maps?q={query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>CFCBBED2-96D7-44AC-B4CC-D2CC17827019</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>maps</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Search Google Maps</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>069195C9-1EA6-4BE3-926E-3ACA803409D2</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>inputstring</key>
				<string>{query}</string>
				<key>matchcasesensitive</key>
				<false/>
				<key>matchmode</key>
				<integer>2</integer>
				<key>matchstring</key>
				<string>^http.*google.*$</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.filter</string>
			<key>uid</key>
			<string>6E16E494-D94B-4DBC-9260-D03A9463EB04</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dirfw</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Google Maps Directions from Work</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>DC546CAB-FD45-4E44-8CB2-F5B5103C3DF9</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $workAddress;
my $workAddressEncoded;
my $queryEncoded;
my $transportMode = '';
my $rawQuery = '{query}';

$workAddress=`security find-generic-password -w -s "alfred-work-address"`;
chomp($workAddress);
$workAddressEncoded=uri_escape($workAddress);


if ($rawQuery =~ m/^walk (.*)$/) {
    $transportMode = '&amp;travelmode=walking';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^pt (.*)$/) {
    $transportMode = '&amp;travelmode=transit';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^bike (.*)$/) {
    $transportMode = '&amp;travelmode=bicycling';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^drive (.*)$/) {
    $transportMode = '&amp;travelmode=driving';   
    $queryEncoded=uri_escape("$1");    
} else {
    $queryEncoded=uri_escape('{query}');
}

print "https://www.google.$ENV{'googleLocal'}/maps/dir/?api=1&amp;origin=$workAddressEncoded&amp;destination=$queryEncoded$transportMode";</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>1FC6BE6D-DBE2-4932-AEEC-2DAEB558D70C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dirfh</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Google Maps Directions from Home</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>1A9138FA-B4B6-4135-8F8E-FC6CA6A49EBE</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $homeAddress;
my $homeAddressEncoded;
my $queryEncoded;
my $transportMode = '';
my $rawQuery = '{query}';

$homeAddress=`security find-generic-password -w -s "alfred-home-address"`;
chomp($homeAddress);
$homeAddressEncoded=uri_escape($homeAddress);

if ($rawQuery =~ m/^walk (.*)$/) {
    $transportMode = '&amp;travelmode=walking';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^pt (.*)$/) {
    $transportMode = '&amp;travelmode=transit';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^bike (.*)$/) {
    $transportMode = '&amp;travelmode=bicycling';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^drive (.*)$/) {
    $transportMode = '&amp;travelmode=driving';   
    $queryEncoded=uri_escape("$1");    
} else {
    $queryEncoded=uri_escape('{query}');
}


print "https://www.google.$ENV{'googleLocal'}/maps/dir/?api=1&amp;origin=$homeAddressEncoded&amp;destination=$queryEncoded$transportMode";</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>DE192528-8869-45A0-B879-19B5B12D7130</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $workAddress;
my $workAddressEncoded;
my $queryEncoded;
my $transportMode = '';
my $rawQuery = '{query}';

$workAddress=`security find-generic-password -w -s "alfred-work-address"`;
chomp($workAddress);
$workAddressEncoded=uri_escape($workAddress);

if ($rawQuery =~ m/^walk (.*)$/) {
    $transportMode = '&amp;travelmode=walking';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^pt (.*)$/) {
    $transportMode = '&amp;travelmode=transit';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^bike (.*)$/) {
    $transportMode = '&amp;travelmode=bicycling';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^drive (.*)$/) {
    $transportMode = '&amp;travelmode=driving';   
    $queryEncoded=uri_escape("$1");    
} else {
    $queryEncoded=uri_escape('{query}');
}


print "https://www.google.$ENV{'googleLocal'}/maps/dir/?api=1&amp;origin=$queryEncoded&amp;destination=$workAddressEncoded$transportMode";</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>789527E4-A091-4D9C-9C7D-4B96476AE1F9</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dirtw</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Google Maps Directions to Work</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>1593719B-1346-4496-BEA7-62EFFADF15EC</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>dirth</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Google Maps Directions to Home</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>4C7C5628-AB4A-4782-9D41-1C1DFE25E26B</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>126</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $homeAddress;
my $homeAddressEncoded;
my $queryEncoded;
my $transportMode = '';
my $rawQuery = '{query}';

$homeAddress=`security find-generic-password -w -s "alfred-home-address"`;
chomp($homeAddress);
$homeAddressEncoded=uri_escape($homeAddress);

if ($rawQuery =~ m/^walk (.*)$/) {
    $transportMode = '&amp;travelmode=walking';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^pt (.*)$/) {
    $transportMode = '&amp;travelmode=transit';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^bike (.*)$/) {
    $transportMode = '&amp;travelmode=bicycling';   
    $queryEncoded=uri_escape("$1");    
} elsif ($rawQuery =~ m/^drive (.*)$/) {
    $transportMode = '&amp;travelmode=driving';   
    $queryEncoded=uri_escape("$1");    
} else {
    $queryEncoded=uri_escape('{query}');
}


print "https://www.google.$ENV{'googleLocal'}/maps/dir/?api=1&amp;origin=$queryEncoded&amp;destination=$homeAddressEncoded$transportMode";</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>A977BB5F-E2BA-4A94-A29A-3A6674F29E71</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $workAddress;
my $workAddressEncoded;
my $homeAddress;
my $homeAddressEncoded;
my $transportMode = '';
my $rawQuery = '{query}';

$workAddress=`security find-generic-password -w -s "alfred-work-address"`;
chomp($workAddress);
$workAddressEncoded=uri_escape($workAddress);
$homeAddress=`security find-generic-password -w -s "alfred-home-address"`;
chomp($homeAddress);
$homeAddressEncoded=uri_escape($homeAddress);

if ($rawQuery =~ m/^walk.*$/) {
    $transportMode = '&amp;travelmode=walking';    
} elsif ($rawQuery =~ m/^pt.*$/) {
    $transportMode = '&amp;travelmode=transit';   
} elsif ($rawQuery =~ m/^bike.*$/) {
    $transportMode = '&amp;travelmode=bicycling';   
} elsif ($rawQuery =~ m/^drive.*$/) {
    $transportMode = '&amp;travelmode=driving';    
} 

print "https://www.google.$ENV{'googleLocal'}/maps/dir/?api=1&amp;origin=$homeAddressEncoded&amp;destination=$workAddressEncoded$transportMode";</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>EC0EBD89-9CF5-4CF5-9659-C3BA307E4B9A</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>keyword</key>
				<string>trafficw</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Show traffic from Home to Work</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>C5816FF4-3CBC-495B-9D35-1E60F857E6C8</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>traffich</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Show traffic from Work to Home</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>B542CDAA-D602-4269-92EE-2AED85D35F63</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>use strict;
use warnings;
use URI::Escape;
my $workAddress;
my $workAddressEncoded;
my $homeAddress;
my $homeAddressEncoded;
my $transportMode = '';
my $rawQuery = '{query}';

$workAddress=`security find-generic-password -w -s "alfred-work-address"`;
chomp($workAddress);
$workAddressEncoded=uri_escape($workAddress);
$homeAddress=`security find-generic-password -w -s "alfred-home-address"`;
chomp($homeAddress);
$homeAddressEncoded=uri_escape($homeAddress);

#my $url = "https://www.google.com/maps/dir/$workAddressEncoded/$homeAddressEncoded/";

print "https://www.google.$ENV{'googleLocal'}/maps/dir/?api=1&amp;origin=$workAddressEncoded&amp;destination=$homeAddressEncoded";</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>4</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>CC3AF13B-A020-4C97-9A77-288AA288DF4C</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>{query}</string>
				<key>title</key>
				<string>Home Address Set To:</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>A5D10E21-AAA9-49B9-831C-9EDCC0298C42</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>mapsethome</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Set Home Address</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>86339348-F179-4B3E-9DEE-4BEBD0A30FDF</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>126</integer>
				<key>script</key>
				<string>security add-generic-password -a "alfred-home-address" -s "alfred-home-address" -w "{query}" -C "note" -U

echo "{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0F90B6AD-0FB4-4A02-8400-05BA50D9DFD4</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>mapsetwork</string>
				<key>subtext</key>
				<string></string>
				<key>text</key>
				<string>Set Work Address</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>2518FC5A-667C-4BF8-B1CB-843980F50049</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>{query}</string>
				<key>title</key>
				<string>Work Address Set To:</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>00ADDBC0-F73E-4845-92EF-2A584B30A083</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>126</integer>
				<key>script</key>
				<string>security add-generic-password -a "alfred-work-address" -s "alfred-work-address" -w "{query}" -C "note" -U

echo "{query}"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>4D2703F7-6EBF-4D56-8CEF-72BBF4FFF644</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>This workflow is not affiliated with Google or Google Products in any way.

Installation Instructions:
Please ensure you fill the 'googleLocal' workflow environment variable to the right in with the appropriate country domain for your locale.

Examples:
Australia: 'com.au'
USA: 'com' (default)
Taiwan: 'com.tw'

Ensure no leading or trailing period is used.

If you wish to use the 'Directions from Current Location - dirfc' command, you will need to install homebrew and the CoreLocationCLI package.

1. Install Homebrew using instructions from https://brew.sh/
2. Install the CoreLocationCLI utility by running the following command in a terminal 'brew cask install corelocationcli'.
3. Check your installed location by running 'which CoreLocationCLI'
4. Ensure the environment variable to the right matches the installed location.

ALPHA NOTES:
1.2.3 Beta adds a host of new features including:
	-dirfc: Directions from Current Address. See the installation instructions above to install Homebrew and CoreLocationCLI
	-dirtc: Directions to Current Address. See the installation instructions above to install Homebrew and CoreLocationCLI
	-dir, dirfc and dirtc now support Google transit type (walk, drive, pt [public transport] and bike)
    -dir now supports 'here'. Here anywhere in the transit plan translates to the current GPS coordinates using CoreLocationCLI. Technically this probably does away with the need for dirfc and dirtc, but, leaving them there for consistency.
	-overhaul of changes to properly use Google API parameters

Utilisation of new features:
	1. 'dirfc' can be invoked as 'dirfc &lt;destination address&gt;' this will use your current location (WiFi card must be active) to the destination. Similar invocation for 'dirtc'.
	2. All commands now support the following modifiers: walk, bike, drive, pt (public transport). The modifier can be invoked by 'dirX &lt;mode&gt; &lt;destination address&gt;' e.g. 'dirfw pt &lt;destination address&gt;' will give you public transport directions. This also works with 'dir' and multiple waypoints.
	3. Localisation defaults to Australia (I am an aussie!), hence make sure you update the URL to the right for your country code you use on Google URLs.

Still to do:
	1. Error handling around CoreLocationCLI (i.e. if WiFi is not active).
	2. Default to GoogleLocal being NULL and gracefully instructing to fill it out.
	4. Any other ideas that come up.</string>
	<key>uidata</key>
	<dict>
		<key>00ADDBC0-F73E-4845-92EF-2A584B30A083</key>
		<dict>
			<key>xpos</key>
			<integer>440</integer>
			<key>ypos</key>
			<integer>1500</integer>
		</dict>
		<key>02392767-C5C7-467A-81A9-1CB133687921</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>140</integer>
		</dict>
		<key>069195C9-1EA6-4BE3-926E-3ACA803409D2</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>400</integer>
		</dict>
		<key>0A6485DA-3570-4B8B-8E6F-2D6776189C29</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>140</integer>
		</dict>
		<key>0F90B6AD-0FB4-4A02-8400-05BA50D9DFD4</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>1380</integer>
		</dict>
		<key>1593719B-1346-4496-BEA7-62EFFADF15EC</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>760</integer>
		</dict>
		<key>1A9138FA-B4B6-4135-8F8E-FC6CA6A49EBE</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>640</integer>
		</dict>
		<key>1FC6BE6D-DBE2-4932-AEEC-2DAEB558D70C</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>520</integer>
		</dict>
		<key>2518FC5A-667C-4BF8-B1CB-843980F50049</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>1500</integer>
		</dict>
		<key>4C7C5628-AB4A-4782-9D41-1C1DFE25E26B</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>880</integer>
		</dict>
		<key>4D2703F7-6EBF-4D56-8CEF-72BBF4FFF644</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>1500</integer>
		</dict>
		<key>6E16E494-D94B-4DBC-9260-D03A9463EB04</key>
		<dict>
			<key>xpos</key>
			<integer>730</integer>
			<key>ypos</key>
			<integer>480</integer>
		</dict>
		<key>789527E4-A091-4D9C-9C7D-4B96476AE1F9</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>760</integer>
		</dict>
		<key>8609F863-5C65-412E-9DF8-52F1CEE7C795</key>
		<dict>
			<key>xpos</key>
			<integer>730</integer>
			<key>ypos</key>
			<integer>180</integer>
		</dict>
		<key>86339348-F179-4B3E-9DEE-4BEBD0A30FDF</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>1380</integer>
		</dict>
		<key>8C362BD8-148F-49F3-9CF3-51DDC0715D47</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>8CED750B-175F-4EAC-9B4E-055566EBFABC</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>962086B3-F3B9-4F29-BA50-5BCD57B63FC5</key>
		<dict>
			<key>xpos</key>
			<integer>870</integer>
			<key>ypos</key>
			<integer>840</integer>
		</dict>
		<key>9AE56FAB-E1EB-4493-AEF1-000A0FC3F943</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>260</integer>
		</dict>
		<key>9FC53C2F-2AA3-476A-BECA-12696AF87132</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>260</integer>
		</dict>
		<key>A5D10E21-AAA9-49B9-831C-9EDCC0298C42</key>
		<dict>
			<key>xpos</key>
			<integer>440</integer>
			<key>ypos</key>
			<integer>1380</integer>
		</dict>
		<key>A977BB5F-E2BA-4A94-A29A-3A6674F29E71</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>880</integer>
		</dict>
		<key>B542CDAA-D602-4269-92EE-2AED85D35F63</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>1120</integer>
		</dict>
		<key>C5816FF4-3CBC-495B-9D35-1E60F857E6C8</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>1000</integer>
		</dict>
		<key>CC3AF13B-A020-4C97-9A77-288AA288DF4C</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>1120</integer>
		</dict>
		<key>CFCBBED2-96D7-44AC-B4CC-D2CC17827019</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>400</integer>
		</dict>
		<key>DC546CAB-FD45-4E44-8CB2-F5B5103C3DF9</key>
		<dict>
			<key>xpos</key>
			<integer>50</integer>
			<key>ypos</key>
			<integer>520</integer>
		</dict>
		<key>DE192528-8869-45A0-B879-19B5B12D7130</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>640</integer>
		</dict>
		<key>EC0EBD89-9CF5-4CF5-9659-C3BA307E4B9A</key>
		<dict>
			<key>xpos</key>
			<integer>250</integer>
			<key>ypos</key>
			<integer>1000</integer>
		</dict>
		<key>F0CDA005-A604-4041-830B-E4FA8965DE2E</key>
		<dict>
			<key>xpos</key>
			<integer>900</integer>
			<key>ypos</key>
			<integer>150</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>CoreLocationCLIBinary</key>
		<string>/usr/local/bin/CoreLocationCLI</string>
		<key>googleLocal</key>
		<string>com.au</string>
	</dict>
	<key>version</key>
	<string>1.2.2alpha</string>
	<key>webaddress</key>
	<string>http://technicalnotebook.com</string>
</dict>
</plist>
